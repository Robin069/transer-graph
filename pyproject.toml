[tool.poetry]
name = "transfer_graph"
version = "0.1.0"
description = "Visualizing historic transfer movements in the Top 5 European Football Leagues."
authors = ["Robin Baudisch <robin.baudisch@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
# Python Interpreter Version
python = "3.11.6"

# Plotting
seaborn = ">=0.11.2"
statworx-theme = ">=0.4.3"

# Orchestration
hydra-core = ">=1.1.2"

# === USER DEFINED DEPENDENCIES HERE ===

# Developement Dependencies
scrapy = "^2.11.0"
pandas = "^2.1.1"
[tool.poetry.group.dev.dependencies]
ipykernel = ">=6.9.2"
jupyterlab = ">=3.3.4"

# Documentation Dependencies
[tool.poetry.group.docs.dependencies]
sphinx = ">=3.3.0"
furo = ">=2022.04.07"
sphinx-autodoc-typehints = ">=1.18.1"
sphinx-markdown-builder = ">=0.5.5"
sphinx-autobuild = "^2021.3.14"
myst-parser = ">=0.17.2"


# Testing Dependencies
[tool.poetry.group.test.dependencies]
pytest = ">=7.1.0"
pytest-cov = ">=4.0"

# Linting Dependencies
[tool.poetry.group.lint.dependencies]
pre-commit = ">=2.18.0"
commitizen = "2.23.0"
black = "22.3.0"
flake8 = "5.0.4"
flake8-docstrings = "1.6.0"
darglint = "1.8.1"
isort = "5.10.1"
pep8-naming = "0.13.0"
pydocstyle = "6.1.1"
mypy = "0.942"
unimport = "0.12.1"

[tool.poetry.scripts]
"transfer_graph" = "transfer_graph.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line_length = 100
atomic = true

[tool.unimport]
gitignore = true
remove = true
include_star_import = true
ignore_init = true

[tool.isort]
src_paths = ["transfer_graph"]
profile = "black"
line_length = 100
atomic = true

[tool.mypy]
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
disallow_any_generics = false
check_untyped_defs = true
warn_unused_ignores = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_calls = false
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "pandas"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["src/tests"]
addopts = """
--cov-report html \
--cov src/transfer_graph -ra"""

[tool.coverage.paths]
source = ["src/transfer_graph"]
tests = ["src/tests"]

[tool.coverage.run]
branch = true
source = ["src/transfer_graph", "src/tests"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",
    "raise AssertionError",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
